name: Test

on:
  # Run on pushes to select branches and on all pull requests.
  push:
#    branches:
#      - master
#      - trunk
#      - 'release/[0-9]+.[0-9]+*'
#      - 'hotfix/[0-9]+.[0-9]+*'
#      - 'feature/**'
  pull_request:
  # Allow manually triggering the workflow.
  workflow_dispatch:

# Cancels all previous workflow runs for the same branch that have not yet completed.
concurrency:
  # The concurrency group contains the workflow name and the branch name.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        php_version: ['5.6', '7.0', '7.2', '7.4', '8.0', '8.1']

    name: "Unit Test: PHP ${{ matrix.php_version }}"

    # Allow builds to fail on as-of-yet unreleased PHP versions.
    continue-on-error: ${{ matrix.php_version == '8.1' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          ini-values: zend.assertions=1, error_reporting=-1, display_errors=On
          coverage: none
        env:
          # Token is needed for the YoastSEO install via VCS.
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add the GitHub token to prevent running into rate limits
        run: composer config github-oauth.github.com ${{ secrets.GITHUB_TOKEN }}

      - name: Remove the PHP platform requirement
        run: composer config --unset platform.php

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies (PHP < 8.0)
        if: ${{ matrix.php_version < '8.0' }}
        uses: ramsey/composer-install@v1
        with:
          # Force a `composer update` run.
          dependency-versions: "highest"
          # But make it selective.
          composer-options: "yoast/wp-test-utils --with-dependencies"

      # For PHP 8.0+, we need to install with ignore platform reqs (temporarily YoastSEO has been fixed).
      - name: Install Composer dependencies (PHP 8.0+)
        if: ${{ matrix.php_version >= '8.0' }}
        uses: ramsey/composer-install@v1
        with:
          # Force a `composer update` run.
          dependency-versions: "highest"
          # But make it selective.
          composer-options: "yoast/wp-test-utils --with-dependencies --ignore-platform-req=php"

      - name: "DEBUG: check whether this is a rate limit issue"
        if: ${{ failure() }}
        run: curl -i https://api.github.com/users/octocat

      - name: Run unit tests
        run: composer test


  integration:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - php_version: '5.6'
            wp_version: '5.6'
            multisite: true

          - php_version: '7.0'
            wp_version: 'trunk'
            multisite: false

          - php_version: '7.3'
            wp_version: '5.8'
            multisite: true

          - php_version: '7.4'
            wp_version: '5.7'
            multisite: false

          # WP 5.6 is the earliest version which (sort of) supports PHP 8.0.
          - php_version: '8.0'
            wp_version: '5.8'
            multisite: false

          # WP 5.9 is the earliest version which (sort of) supports PHP 8.1.
          - php_version: '8.1'
            wp_version: 'trunk'
            multisite: true

    name: "Integration Test: PHP ${{ matrix.php_version }} | WP ${{ matrix.wp_version }} | multisite: ${{ matrix.multisite }}"

    # Allow builds to fail on as-of-yet unreleased PHP versions.
    continue-on-error: ${{ matrix.php_version == '8.1' || matrix.wp_version == 'trunk' }}

    services:
      mysql:
        # Use MySQL 5.7 for PHP < 7.4, otherwise MySQL 8.0.
        image: mysql:${{ ( matrix.php_version < 7.4 && '5.7' ) || '8.0' }}
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=10s --health-retries=10

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php_version }}
          ini-values: zend.assertions=1, error_reporting=-1, display_errors=On
          coverage: none
        env:
          # Token is needed for the YoastSEO install via VCS.
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Determine the type of Composer install which is needed.
      # 1: WP 5.9 or higher - all PHPUnit versions needed are supported, use the most appropriate one.
      # 2. WP < 5.9 with PHP 8.0 or higher - PHPUnit 5 - 7 supported, locked at 5.x, but needs upgrade to 7 for PHP >= 8.0.
      # 3. WP < 5.9 with PHP < 8.0 - just use the locked PHPUnit 5 version.
      - name: Determine the type of Composer install to use
        id: composer_toggle
        run: |
          if [[ "${{ matrix.wp_version }}" =~ ^trunk|5\.9|[6789]\.[0-9]$ ]]; then
            echo '::set-output name=TYPE::1'
          elif [[ "${{ matrix.php_version }}" > "7.4" ]]; then
            echo '::set-output name=TYPE::2'
          else
            echo '::set-output name=TYPE::3'
          fi

      - name: Debug info - show type determined
        run: echo ${{ steps.composer_toggle.outputs.TYPE }}

      - name: Conditionally remove the PHP platform requirement
        if: ${{ steps.composer_toggle.outputs.TYPE == '1' }}
        run: composer config --unset platform.php

      - name: Conditionally require a higher PHPUnit version
        if: ${{ steps.composer_toggle.outputs.TYPE == '2' }}
        run: composer require --dev phpunit/phpunit:"^7.5" --no-update --ignore-platform-req=php

# TODO: either get PR for WPSEO to allow install on PHP 8 merged or add extra step toggle.

      # Install dependencies and handle caching in one go.
      # @link https://github.com/marketplace/actions/install-composer-dependencies
      - name: Install Composer dependencies - WP 5.9 or higher
        if: ${{ steps.composer_toggle.outputs.TYPE == '1' }}
        uses: ramsey/composer-install@v1
        with:
          # Force a `composer update` run.
          dependency-versions: "highest"
          # But make it selective.
          composer-options: "yoast/wp-test-utils --with-dependencies"

      - name: Install Composer dependencies - WP < 5.9 with PHP >= 8
        if: ${{ steps.composer_toggle.outputs.TYPE == '2' }}
        uses: ramsey/composer-install@v1
        with:
          # Force a `composer update` run.
          dependency-versions: "highest"
          # But make it selective.
          composer-options: "yoast/wp-test-utils phpunit/phpunit --with-dependencies --ignore-platform-req=php"

      - name: Install Composer dependencies
        if: ${{ steps.composer_toggle.outputs.TYPE == '3' }}
        uses: ramsey/composer-install@v1

      - name: Install WP
        run: scripts/install-wp-tests.sh wordpress_test root '' 127.0.0.1:3306 ${{ matrix.wp_version }}

      - name: Install YoastSEO dependencies
        run: |
         cd vendor/yoast/wordpress-seo
         composer install --no-dev --no-scripts --no-interaction --ignore-platform-reqs
         cd ../../..

      - name: Run unit tests - single site
        if: ${{ matrix.multisite == false }}
        run: composer integration-test
        env:
          WP_PLUGIN_DIR: "./vendor/yoast"

      - name: Run unit tests - multisite
        if: ${{ matrix.multisite == true }}
        run: composer integration-test
        env:
          WP_PLUGIN_DIR: "./vendor/yoast"
          WP_MULTISITE: 1

#
# Questions:
# - YoastSEO is already being installed via Composer. Why is it being cloned as well in the Travis workflow ?
# - Why is the YoastSEO in Composer using the "dev" repo, while the clone in Travis is being done from the dist repo ?
# - Why all the moving around of the YoastSEO repo ? Why not use the WP_PLUGIN_DIR environment variable ?
# - [TESTING] Is the separate `composer install` for YoastSEO really needed ?


#*****
  # Clone WordPress
#  - |
#    if [[ "$PHPUNIT" == "1" ]]; then
#      git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ /tmp/wordpress
#    fi

  # Clone WPSEO and its submodule
#  - |
#    if [[ "$PHPUNIT" == "1" ]]; then
#      git clone --depth=1 --branch="trunk" https://github.com/Yoast-dist/wordpress-seo.git $WP_DEVELOP_DIR/src/wp-content/plugins/wordpress-seo
#      cd /tmp/wordpress/src/wp-content/plugins/wordpress-seo
#      travis_retry composer install --no-dev --no-scripts --no-interaction --ignore-platform-reqs
#      cd -
#    fi

  # Copy WooCommerce SEO to the test directory
#  - |
#    if [[ "$PHPUNIT" == "1" ]]; then
#      cd ..
#      cp -r "$PLUGIN_SLUG" "/tmp/wordpress/src/wp-content/plugins/$PLUGIN_SLUG"
#      cd /tmp/wordpress/
#      cp wp-tests-config-sample.php wp-tests-config.php
#      sed -i "s/youremptytestdbnamehere/wordpress_tests/" wp-tests-config.php
#      sed -i "s/yourusernamehere/travis/" wp-tests-config.php
#      sed -i "s/yourpasswordhere//" wp-tests-config.php
#      mysql -e "CREATE DATABASE wordpress_tests;" -uroot
#      cd "/tmp/wordpress/src/wp-content/plugins/$PLUGIN_SLUG"
#      phpenv rehash
#    fi

#*******
