os: linux
dist: xenial
language: php

services:
  - mysql

branches:
  only:
    - master
    - trunk
    - /^release\/\d+\.\d+(\.\d+)?(-\S*)?$/
    - /^feature\/*/
    - /^hotfix\/\d+\.\d+(\.\d+)?(-\S*)?$/
    # Also build tags like 1.1.1 or 1.1 for deployment.
    - /^\d+\.\d+(\.\d+)?(-\S*)?$/

jobs:
  fast_finish: true
  include:
    - php: 7.3.24
      env: WP_VERSION=5.8 WP_MULTISITE=1 PHPUNIT=1 CHECKJS=1 TRAVIS_NODE_VERSION=lts/*
    - php: 5.6
      env: WP_VERSION=5.6 PHPLINT=1 PHPUNIT=1
    - php: 7.4
      env: WP_VERSION=5.8 PHPLINT=1 PHPUNIT=1
    - php: 7.0
      env: WP_VERSION=master WP_MULTISITE=1 PHPUNIT=1
    - php: 8.0
      env: WP_VERSION=5.8 PHPLINT=1 PHPUNIT=1
    - stage: deploy
      env: WP_VERSION=5.8
      if: ( tag IS present OR branch =~ /^feature\// OR branch =~ /^release\// OR branch =~ /^hotfix\// OR branch = trunk ) AND type != pull_request
      before_install:
        - openssl aes-256-cbc -K $encrypted_2b922af4d08d_key -iv $encrypted_2b922af4d08d_iv -in ./deploy_keys/wpseo_woo_deploy.enc -out ./deploy_keys/wpseo_woo_deploy -d
        - chmod 600 ./deploy_keys/wpseo_woo_deploy
        - eval $(ssh-agent -s)
        - ssh-add ./deploy_keys/wpseo_woo_deploy
        - ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
        - composer config --global github-oauth.github.com ${GITHUB_OAUTH_TOKEN}
      before_deploy:
        - nvm install node
        - curl -o- -L https://yarnpkg.com/install.sh | bash
        - export PATH=$HOME/.yarn/bin:$PATH
        - yarn global add grunt-cli
        - yarn install
        - |
          if [[ ! -z "$TRAVIS_TAG" ]]; then
            grunt set-version -new-version=$TRAVIS_TAG
            grunt update-version
          fi
        - grunt artifact

      # If the commit was tagged, create an artifact and push it to the distribution github
      deploy:
        skip_cleanup: true
        provider: script
        script: bash scripts/deploy_to_dist.sh ${TRAVIS_TAG:-$TRAVIS_BRANCH} wpseo-woocommerce
        on:
          repo: $TRAVIS_REPO_SLUG
          all_branches: true
  allow_failures:
    # Allow failures for unstable builds.
    - php: 7.0
      env: WP_VERSION=master WP_MULTISITE=1 PHPUNIT=1

cache:
  directories:
    - vendor
    - $HOME/.composer/cache

before_install:
  - phpenv config-rm xdebug.ini || echo 'No xdebug config.'
  - composer config --global github-oauth.github.com ${GITHUB_OAUTH_TOKEN}
  - |
    if [[ "$CHECKJS" == "1" ]]; then
      nvm install $TRAVIS_NODE_VERSION
      curl -o- -L https://yarnpkg.com/install.sh | bash
      export PATH=$HOME/.yarn/bin:$PATH
    fi

install:
  - |
    if [[ ${TRAVIS_PHP_VERSION:0:1} == "8" || $TRAVIS_PHP_VERSION == "nightly" ]]; then
      travis_retry composer install --no-interaction --ignore-platform-reqs
    elif [[ "$PHPUNIT" == "1" || "$PHPLINT" == "1" ]]; then
      travis_retry composer install --no-interaction
    elif [[ "$TRAVIS_BUILD_STAGE_NAME" == "deploy" ]]; then
      travis_retry composer install --no-dev --no-interaction
    fi
  - if [[ "$CHECKJS" == "1" ]]; then yarn global add grunt-cli; yarn install; fi

before_script:
  - PLUGIN_SLUG=$(basename $(pwd))
  - export WP_DEVELOP_DIR=/tmp/wordpress/
  - export -f travis_fold
  - export -f travis_time_start
  - export -f travis_time_finish

  # Clone WordPress
  - |
    if [[ "$PHPUNIT" == "1" ]]; then
      git clone --depth=1 --branch="$WP_VERSION" git://develop.git.wordpress.org/ /tmp/wordpress
    fi

  # Clone WPSEO and its submodule
  - |
    if [[ "$PHPUNIT" == "1" ]]; then
      git clone --depth=1 --branch="trunk" https://github.com/Yoast-dist/wordpress-seo.git $WP_DEVELOP_DIR/src/wp-content/plugins/wordpress-seo
      cd /tmp/wordpress/src/wp-content/plugins/wordpress-seo
      travis_retry composer install --no-dev --no-scripts --no-interaction --ignore-platform-reqs
      cd -
    fi

  # Copy WooCommerce SEO to the test directory
  - |
    if [[ "$PHPUNIT" == "1" ]]; then
      cd ..
      cp -r "$PLUGIN_SLUG" "/tmp/wordpress/src/wp-content/plugins/$PLUGIN_SLUG"
      cd /tmp/wordpress/
      cp wp-tests-config-sample.php wp-tests-config.php
      sed -i "s/youremptytestdbnamehere/wordpress_tests/" wp-tests-config.php
      sed -i "s/yourusernamehere/travis/" wp-tests-config.php
      sed -i "s/yourpasswordhere//" wp-tests-config.php
      mysql -e "CREATE DATABASE wordpress_tests;" -uroot
      cd "/tmp/wordpress/src/wp-content/plugins/$PLUGIN_SLUG"
      phpenv rehash
    fi

script:
  # PHP Linting
  - |
    if [[ "$PHPLINT" == "1" ]]; then
      travis_fold start "PHP.check" && travis_time_start
      composer lint
      travis_time_finish && travis_fold end "PHP.check"
    fi
  # PHP Integration Tests
  - |
    if [[ "$PHPUNIT" == "1" && "$WP_VERSION" != "latest" ]] && [[ "$WP_VERSION" == "5.9" || "${WP_VERSION:0:1}" == "6" || "$WP_VERSION" == "master" ]]; then
      travis_fold start "PHP.integration-tests" && travis_time_start
      composer config --unset platform.php &&
      travis_retry composer update yoast/wp-test-utils --with-all-dependencies --no-interaction &&
      vendor/bin/phpunit -c phpunit-integration.xml.dist
      travis_time_finish && travis_fold end "PHP.integration-tests"
    elif [[ "$PHPUNIT" == "1" && ${TRAVIS_PHP_VERSION:0:1} != "8" && $TRAVIS_PHP_VERSION != "nightly" ]]; then
      travis_fold start "PHP.tests" && travis_time_start
      composer integration-test
      travis_time_finish && travis_fold end "PHP.tests"
    elif [[ "$PHPUNIT" == "1" ]] && [[ ${TRAVIS_PHP_VERSION:0:1} == "8" || $TRAVIS_PHP_VERSION == "nightly" ]]; then
      travis_fold start "PHP.tests" && travis_time_start
      travis_retry composer require --dev phpunit/phpunit:"^7.5" --update-with-dependencies --ignore-platform-reqs --no-interaction &&
      composer integration-test
      travis_time_finish && travis_fold end "PHP.tests"
    fi
  # Reset Composer dependencies between the different test setups.
  - git checkout composer.lock composer.json
  - travis_retry composer install --no-interaction
  # PHP Unit Tests
  - |
    if [[ "$PHPUNIT" == "1" && ${TRAVIS_PHP_VERSION:0:1} != "8" && $TRAVIS_PHP_VERSION != "nightly" ]]; then
      travis_fold start "PHP.tests" && travis_time_start
      composer test
      travis_time_finish && travis_fold end "PHP.tests"
    fi
  - |
    if [[ "$PHPUNIT" == "1" ]] && [[ ${TRAVIS_PHP_VERSION:0:1} == "8" || $TRAVIS_PHP_VERSION == "nightly" ]]; then
      travis_fold start "PHP.tests" && travis_time_start
      travis_retry composer require --dev phpunit/phpunit:"^9.0" --update-with-dependencies --ignore-platform-reqs --no-interaction
      travis_retry composer update yoast/wp-test-utils --with-dependencies --ignore-platform-reqs --no-interaction &&
      composer test
      travis_time_finish && travis_fold end "PHP.tests"
    fi
  # JS Linting
  - |
    if [[ "$CHECKJS" == "1" ]]; then
      travis_fold start "JS.check" && travis_time_start
      grunt eslint:plugin
      travis_time_finish && travis_fold end "JS.check"
    fi
